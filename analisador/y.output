Terminals which are not used

   STRING_LITERAL
   DO
   THEN
   RETURN
   ACC
   FCC
   OP_INCREMENT
   OP_DECREMENT
   REST_DIV


Grammar

    0 $accept: program $end

    1 program: declaration subprograms

    2 subprograms: subprogram
    3            | subprogram subprograms

    4 subprogram: FUNCTION ID AP argumentos FP DP tipo AC stmlist FC BLOCK_END
    5           | PROCEDURE ID AP argumentos FP AC stmlist FC BLOCK_END

    6 tipo: NUMBER
    7     | STRING
    8     | BOOL
    9     | MAP

   10 argumentos: /* empty */
   11           | argumento
   12           | argumentos COL argumento

   13 argumento: tipo_inicial ID

   14 parametros: id
   15           | parametros COL id

   16 tipo_inicial: tipo
   17             | tipo dimensions

   18 dimensions: DIMENSION
   19           | DIMENSION dimensions

   20 stmlist: stm
   21        | stmlist SEMI stm

   22 stm: declaration
   23    | while
   24    | for
   25    | if
   26    | block

   27 declaration: /* empty */
   28            | tipo_inicial ids

   29 ids: id SEMI
   30    | id COL ids

   31 id: ID init_opt

   32 init_opt: /* empty */
   33         | ASSIGN ID
   34         | ASSIGN ID AP parametros FP
   35         | ASSIGN arth_exp
   36         | ASSIGN bool_exp

   37 while: WHILE condition block BLOCK_ENDWHILE

   38 for: FOR condition block BLOCK_ENDFOR

   39 if: IF condition block BLOCK_ENDIF
   40   | IF condition block BLOCK_ENDIF elseif

   41 elseif: ELSE IF condition block BLOCK_ENDIF elseif
   42       | ELSE block BLOCK_ENDIF

   43 block: AC stmlist FC

   44 condition: AP bool_exp FP

   45 bool_exp: bool_term AND bool_exp
   46         | bool_term OR bool_exp
   47         | bool_term

   48 bool_term: NOT bool_factor
   49          | bool_factor

   50 bool_factor: TRUE
   51            | FALSE
   52            | AP bool_exp FP
   53            | rel_exp
   54            | /* empty */

   55 rel_exp: rel_term rel_op rel_term

   56 rel_term: arth_exp
   57         | FUNCTION

   58 rel_op: OP_EQ
   59       | OP_NEQ
   60       | OP_LARGER
   61       | OP_SMALLER
   62       | OP_LEQ
   63       | OP_SEQ

   64 arth_exp: arth_term OP_AD arth_exp
   65         | arth_term OP_SUB arth_exp
   66         | arth_term

   67 arth_term: arth_factor OP_MULT arth_term
   68          | arth_factor OP_DIV arth_term
   69          | arth_factor

   70 arth_factor: AP arth_exp FP
   71            | NUMBER_LITERAL


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 4 5 13 31 33 34
NUMBER_LITERAL (259) 71
STRING_LITERAL (260)
WHILE (261) 37
BLOCK_ENDWHILE (262) 37
BLOCK_ENDFOR (263) 38
IF (264) 39 40 41
BLOCK_ENDIF (265) 39 40 41 42
BLOCK_END (266) 4 5
FOR (267) 38
DO (268)
THEN (269)
ELSE (270) 41 42
SEMI (271) 21 29
ASSIGN (272) 33 34 35 36
COL (273) 12 15 30
DP (274) 4
FUNCTION (275) 4 57
PROCEDURE (276) 5
RETURN (277)
AP (278) 4 5 34 44 52 70
FP (279) 4 5 34 44 52 70
AC (280) 4 5 43
FC (281) 4 5 43
ACC (282)
FCC (283)
DIMENSION (284) 18 19
OP_AD (285) 64
OP_DIV (286) 68
OP_SUB (287) 65
OP_MULT (288) 67
NUMBER (289) 6
STRING (290) 7
BOOL (291) 8
MAP (292) 9
TRUE (293) 50
FALSE (294) 51
AND (295) 45
OR (296) 46
NOT (297) 48
OP_LARGER (298) 60
OP_SMALLER (299) 61
OP_LEQ (300) 62
OP_SEQ (301) 63
OP_EQ (302) 58
OP_NEQ (303) 59
OP_INCREMENT (304)
OP_DECREMENT (305)
REST_DIV (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1, on right: 0
subprograms (54)
    on left: 2 3, on right: 1 3
subprogram (55)
    on left: 4 5, on right: 2 3
tipo (56)
    on left: 6 7 8 9, on right: 4 16 17
argumentos (57)
    on left: 10 11 12, on right: 4 5 12
argumento (58)
    on left: 13, on right: 11 12
parametros (59)
    on left: 14 15, on right: 15 34
tipo_inicial (60)
    on left: 16 17, on right: 13 28
dimensions (61)
    on left: 18 19, on right: 17 19
stmlist (62)
    on left: 20 21, on right: 4 5 21 43
stm (63)
    on left: 22 23 24 25 26, on right: 20 21
declaration (64)
    on left: 27 28, on right: 1 22
ids (65)
    on left: 29 30, on right: 28 30
id (66)
    on left: 31, on right: 14 15 29 30
init_opt (67)
    on left: 32 33 34 35 36, on right: 31
while (68)
    on left: 37, on right: 23
for (69)
    on left: 38, on right: 24
if (70)
    on left: 39 40, on right: 25
elseif (71)
    on left: 41 42, on right: 40 41
block (72)
    on left: 43, on right: 26 37 38 39 40 41 42
condition (73)
    on left: 44, on right: 37 38 39 40 41
bool_exp (74)
    on left: 45 46 47, on right: 36 44 45 46 52
bool_term (75)
    on left: 48 49, on right: 45 46 47
bool_factor (76)
    on left: 50 51 52 53 54, on right: 48 49
rel_exp (77)
    on left: 55, on right: 53
rel_term (78)
    on left: 56 57, on right: 55
rel_op (79)
    on left: 58 59 60 61 62 63, on right: 55
arth_exp (80)
    on left: 64 65 66, on right: 35 56 64 65 70
arth_term (81)
    on left: 67 68 69, on right: 64 65 66 67 68
arth_factor (82)
    on left: 70 71, on right: 67 68 69


state 0

    0 $accept: . program $end

    NUMBER  shift, and go to state 1
    STRING  shift, and go to state 2
    BOOL    shift, and go to state 3
    MAP     shift, and go to state 4

    $default  reduce using rule 27 (declaration)

    program       go to state 5
    tipo          go to state 6
    tipo_inicial  go to state 7
    declaration   go to state 8


state 1

    6 tipo: NUMBER .

    $default  reduce using rule 6 (tipo)


state 2

    7 tipo: STRING .

    $default  reduce using rule 7 (tipo)


state 3

    8 tipo: BOOL .

    $default  reduce using rule 8 (tipo)


state 4

    9 tipo: MAP .

    $default  reduce using rule 9 (tipo)


state 5

    0 $accept: program . $end

    $end  shift, and go to state 9


state 6

   16 tipo_inicial: tipo .
   17             | tipo . dimensions

    DIMENSION  shift, and go to state 10

    $default  reduce using rule 16 (tipo_inicial)

    dimensions  go to state 11


state 7

   28 declaration: tipo_inicial . ids

    ID  shift, and go to state 12

    ids  go to state 13
    id   go to state 14


state 8

    1 program: declaration . subprograms

    FUNCTION   shift, and go to state 15
    PROCEDURE  shift, and go to state 16

    subprograms  go to state 17
    subprogram   go to state 18


state 9

    0 $accept: program $end .

    $default  accept


state 10

   18 dimensions: DIMENSION .
   19           | DIMENSION . dimensions

    DIMENSION  shift, and go to state 10

    $default  reduce using rule 18 (dimensions)

    dimensions  go to state 19


state 11

   17 tipo_inicial: tipo dimensions .

    $default  reduce using rule 17 (tipo_inicial)


state 12

   31 id: ID . init_opt

    ASSIGN  shift, and go to state 20

    $default  reduce using rule 32 (init_opt)

    init_opt  go to state 21


state 13

   28 declaration: tipo_inicial ids .

    $default  reduce using rule 28 (declaration)


state 14

   29 ids: id . SEMI
   30    | id . COL ids

    SEMI  shift, and go to state 22
    COL   shift, and go to state 23


state 15

    4 subprogram: FUNCTION . ID AP argumentos FP DP tipo AC stmlist FC BLOCK_END

    ID  shift, and go to state 24


state 16

    5 subprogram: PROCEDURE . ID AP argumentos FP AC stmlist FC BLOCK_END

    ID  shift, and go to state 25


state 17

    1 program: declaration subprograms .

    $default  reduce using rule 1 (program)


state 18

    2 subprograms: subprogram .
    3            | subprogram . subprograms

    FUNCTION   shift, and go to state 15
    PROCEDURE  shift, and go to state 16

    $default  reduce using rule 2 (subprograms)

    subprograms  go to state 26
    subprogram   go to state 18


state 19

   19 dimensions: DIMENSION dimensions .

    $default  reduce using rule 19 (dimensions)


state 20

   33 init_opt: ASSIGN . ID
   34         | ASSIGN . ID AP parametros FP
   35         | ASSIGN . arth_exp
   36         | ASSIGN . bool_exp

    ID              shift, and go to state 27
    NUMBER_LITERAL  shift, and go to state 28
    FUNCTION        shift, and go to state 29
    AP              shift, and go to state 30
    TRUE            shift, and go to state 31
    FALSE           shift, and go to state 32
    NOT             shift, and go to state 33

    $default  reduce using rule 54 (bool_factor)

    bool_exp     go to state 34
    bool_term    go to state 35
    bool_factor  go to state 36
    rel_exp      go to state 37
    rel_term     go to state 38
    arth_exp     go to state 39
    arth_term    go to state 40
    arth_factor  go to state 41


state 21

   31 id: ID init_opt .

    $default  reduce using rule 31 (id)


state 22

   29 ids: id SEMI .

    $default  reduce using rule 29 (ids)


state 23

   30 ids: id COL . ids

    ID  shift, and go to state 12

    ids  go to state 42
    id   go to state 14


state 24

    4 subprogram: FUNCTION ID . AP argumentos FP DP tipo AC stmlist FC BLOCK_END

    AP  shift, and go to state 43


state 25

    5 subprogram: PROCEDURE ID . AP argumentos FP AC stmlist FC BLOCK_END

    AP  shift, and go to state 44


state 26

    3 subprograms: subprogram subprograms .

    $default  reduce using rule 3 (subprograms)


state 27

   33 init_opt: ASSIGN ID .
   34         | ASSIGN ID . AP parametros FP

    AP  shift, and go to state 45

    $default  reduce using rule 33 (init_opt)


state 28

   71 arth_factor: NUMBER_LITERAL .

    $default  reduce using rule 71 (arth_factor)


state 29

   57 rel_term: FUNCTION .

    $default  reduce using rule 57 (rel_term)


state 30

   52 bool_factor: AP . bool_exp FP
   70 arth_factor: AP . arth_exp FP

    NUMBER_LITERAL  shift, and go to state 28
    FUNCTION        shift, and go to state 29
    AP              shift, and go to state 30
    TRUE            shift, and go to state 31
    FALSE           shift, and go to state 32
    NOT             shift, and go to state 33

    $default  reduce using rule 54 (bool_factor)

    bool_exp     go to state 46
    bool_term    go to state 35
    bool_factor  go to state 36
    rel_exp      go to state 37
    rel_term     go to state 38
    arth_exp     go to state 47
    arth_term    go to state 40
    arth_factor  go to state 41


state 31

   50 bool_factor: TRUE .

    $default  reduce using rule 50 (bool_factor)


state 32

   51 bool_factor: FALSE .

    $default  reduce using rule 51 (bool_factor)


state 33

   48 bool_term: NOT . bool_factor

    NUMBER_LITERAL  shift, and go to state 28
    FUNCTION        shift, and go to state 29
    AP              shift, and go to state 30
    TRUE            shift, and go to state 31
    FALSE           shift, and go to state 32

    $default  reduce using rule 54 (bool_factor)

    bool_factor  go to state 48
    rel_exp      go to state 37
    rel_term     go to state 38
    arth_exp     go to state 49
    arth_term    go to state 40
    arth_factor  go to state 41


state 34

   36 init_opt: ASSIGN bool_exp .

    $default  reduce using rule 36 (init_opt)


state 35

   45 bool_exp: bool_term . AND bool_exp
   46         | bool_term . OR bool_exp
   47         | bool_term .

    AND  shift, and go to state 50
    OR   shift, and go to state 51

    $default  reduce using rule 47 (bool_exp)


state 36

   49 bool_term: bool_factor .

    $default  reduce using rule 49 (bool_term)


state 37

   53 bool_factor: rel_exp .

    $default  reduce using rule 53 (bool_factor)


state 38

   55 rel_exp: rel_term . rel_op rel_term

    OP_LARGER   shift, and go to state 52
    OP_SMALLER  shift, and go to state 53
    OP_LEQ      shift, and go to state 54
    OP_SEQ      shift, and go to state 55
    OP_EQ       shift, and go to state 56
    OP_NEQ      shift, and go to state 57

    rel_op  go to state 58


state 39

   35 init_opt: ASSIGN arth_exp .
   56 rel_term: arth_exp .

    SEMI      reduce using rule 35 (init_opt)
    COL       reduce using rule 35 (init_opt)
    FP        reduce using rule 35 (init_opt)
    $default  reduce using rule 56 (rel_term)


state 40

   64 arth_exp: arth_term . OP_AD arth_exp
   65         | arth_term . OP_SUB arth_exp
   66         | arth_term .

    OP_AD   shift, and go to state 59
    OP_SUB  shift, and go to state 60

    $default  reduce using rule 66 (arth_exp)


state 41

   67 arth_term: arth_factor . OP_MULT arth_term
   68          | arth_factor . OP_DIV arth_term
   69          | arth_factor .

    OP_DIV   shift, and go to state 61
    OP_MULT  shift, and go to state 62

    $default  reduce using rule 69 (arth_term)


state 42

   30 ids: id COL ids .

    $default  reduce using rule 30 (ids)


state 43

    4 subprogram: FUNCTION ID AP . argumentos FP DP tipo AC stmlist FC BLOCK_END

    NUMBER  shift, and go to state 1
    STRING  shift, and go to state 2
    BOOL    shift, and go to state 3
    MAP     shift, and go to state 4

    $default  reduce using rule 10 (argumentos)

    tipo          go to state 6
    argumentos    go to state 63
    argumento     go to state 64
    tipo_inicial  go to state 65


state 44

    5 subprogram: PROCEDURE ID AP . argumentos FP AC stmlist FC BLOCK_END

    NUMBER  shift, and go to state 1
    STRING  shift, and go to state 2
    BOOL    shift, and go to state 3
    MAP     shift, and go to state 4

    $default  reduce using rule 10 (argumentos)

    tipo          go to state 6
    argumentos    go to state 66
    argumento     go to state 64
    tipo_inicial  go to state 65


state 45

   34 init_opt: ASSIGN ID AP . parametros FP

    ID  shift, and go to state 12

    parametros  go to state 67
    id          go to state 68


state 46

   52 bool_factor: AP bool_exp . FP

    FP  shift, and go to state 69


state 47

   56 rel_term: arth_exp .
   70 arth_factor: AP arth_exp . FP

    FP  shift, and go to state 70

    $default  reduce using rule 56 (rel_term)


state 48

   48 bool_term: NOT bool_factor .

    $default  reduce using rule 48 (bool_term)


state 49

   56 rel_term: arth_exp .

    $default  reduce using rule 56 (rel_term)


state 50

   45 bool_exp: bool_term AND . bool_exp

    NUMBER_LITERAL  shift, and go to state 28
    FUNCTION        shift, and go to state 29
    AP              shift, and go to state 30
    TRUE            shift, and go to state 31
    FALSE           shift, and go to state 32
    NOT             shift, and go to state 33

    $default  reduce using rule 54 (bool_factor)

    bool_exp     go to state 71
    bool_term    go to state 35
    bool_factor  go to state 36
    rel_exp      go to state 37
    rel_term     go to state 38
    arth_exp     go to state 49
    arth_term    go to state 40
    arth_factor  go to state 41


state 51

   46 bool_exp: bool_term OR . bool_exp

    NUMBER_LITERAL  shift, and go to state 28
    FUNCTION        shift, and go to state 29
    AP              shift, and go to state 30
    TRUE            shift, and go to state 31
    FALSE           shift, and go to state 32
    NOT             shift, and go to state 33

    $default  reduce using rule 54 (bool_factor)

    bool_exp     go to state 72
    bool_term    go to state 35
    bool_factor  go to state 36
    rel_exp      go to state 37
    rel_term     go to state 38
    arth_exp     go to state 49
    arth_term    go to state 40
    arth_factor  go to state 41


state 52

   60 rel_op: OP_LARGER .

    $default  reduce using rule 60 (rel_op)


state 53

   61 rel_op: OP_SMALLER .

    $default  reduce using rule 61 (rel_op)


state 54

   62 rel_op: OP_LEQ .

    $default  reduce using rule 62 (rel_op)


state 55

   63 rel_op: OP_SEQ .

    $default  reduce using rule 63 (rel_op)


state 56

   58 rel_op: OP_EQ .

    $default  reduce using rule 58 (rel_op)


state 57

   59 rel_op: OP_NEQ .

    $default  reduce using rule 59 (rel_op)


state 58

   55 rel_exp: rel_term rel_op . rel_term

    NUMBER_LITERAL  shift, and go to state 28
    FUNCTION        shift, and go to state 29
    AP              shift, and go to state 73

    rel_term     go to state 74
    arth_exp     go to state 49
    arth_term    go to state 40
    arth_factor  go to state 41


state 59

   64 arth_exp: arth_term OP_AD . arth_exp

    NUMBER_LITERAL  shift, and go to state 28
    AP              shift, and go to state 73

    arth_exp     go to state 75
    arth_term    go to state 40
    arth_factor  go to state 41


state 60

   65 arth_exp: arth_term OP_SUB . arth_exp

    NUMBER_LITERAL  shift, and go to state 28
    AP              shift, and go to state 73

    arth_exp     go to state 76
    arth_term    go to state 40
    arth_factor  go to state 41


state 61

   68 arth_term: arth_factor OP_DIV . arth_term

    NUMBER_LITERAL  shift, and go to state 28
    AP              shift, and go to state 73

    arth_term    go to state 77
    arth_factor  go to state 41


state 62

   67 arth_term: arth_factor OP_MULT . arth_term

    NUMBER_LITERAL  shift, and go to state 28
    AP              shift, and go to state 73

    arth_term    go to state 78
    arth_factor  go to state 41


state 63

    4 subprogram: FUNCTION ID AP argumentos . FP DP tipo AC stmlist FC BLOCK_END
   12 argumentos: argumentos . COL argumento

    COL  shift, and go to state 79
    FP   shift, and go to state 80


state 64

   11 argumentos: argumento .

    $default  reduce using rule 11 (argumentos)


state 65

   13 argumento: tipo_inicial . ID

    ID  shift, and go to state 81


state 66

    5 subprogram: PROCEDURE ID AP argumentos . FP AC stmlist FC BLOCK_END
   12 argumentos: argumentos . COL argumento

    COL  shift, and go to state 79
    FP   shift, and go to state 82


state 67

   15 parametros: parametros . COL id
   34 init_opt: ASSIGN ID AP parametros . FP

    COL  shift, and go to state 83
    FP   shift, and go to state 84


state 68

   14 parametros: id .

    $default  reduce using rule 14 (parametros)


state 69

   52 bool_factor: AP bool_exp FP .

    $default  reduce using rule 52 (bool_factor)


state 70

   70 arth_factor: AP arth_exp FP .

    $default  reduce using rule 70 (arth_factor)


state 71

   45 bool_exp: bool_term AND bool_exp .

    $default  reduce using rule 45 (bool_exp)


state 72

   46 bool_exp: bool_term OR bool_exp .

    $default  reduce using rule 46 (bool_exp)


state 73

   70 arth_factor: AP . arth_exp FP

    NUMBER_LITERAL  shift, and go to state 28
    AP              shift, and go to state 73

    arth_exp     go to state 85
    arth_term    go to state 40
    arth_factor  go to state 41


state 74

   55 rel_exp: rel_term rel_op rel_term .

    $default  reduce using rule 55 (rel_exp)


state 75

   64 arth_exp: arth_term OP_AD arth_exp .

    $default  reduce using rule 64 (arth_exp)


state 76

   65 arth_exp: arth_term OP_SUB arth_exp .

    $default  reduce using rule 65 (arth_exp)


state 77

   68 arth_term: arth_factor OP_DIV arth_term .

    $default  reduce using rule 68 (arth_term)


state 78

   67 arth_term: arth_factor OP_MULT arth_term .

    $default  reduce using rule 67 (arth_term)


state 79

   12 argumentos: argumentos COL . argumento

    NUMBER  shift, and go to state 1
    STRING  shift, and go to state 2
    BOOL    shift, and go to state 3
    MAP     shift, and go to state 4

    tipo          go to state 6
    argumento     go to state 86
    tipo_inicial  go to state 65


state 80

    4 subprogram: FUNCTION ID AP argumentos FP . DP tipo AC stmlist FC BLOCK_END

    DP  shift, and go to state 87


state 81

   13 argumento: tipo_inicial ID .

    $default  reduce using rule 13 (argumento)


state 82

    5 subprogram: PROCEDURE ID AP argumentos FP . AC stmlist FC BLOCK_END

    AC  shift, and go to state 88


state 83

   15 parametros: parametros COL . id

    ID  shift, and go to state 12

    id  go to state 89


state 84

   34 init_opt: ASSIGN ID AP parametros FP .

    $default  reduce using rule 34 (init_opt)


state 85

   70 arth_factor: AP arth_exp . FP

    FP  shift, and go to state 70


state 86

   12 argumentos: argumentos COL argumento .

    $default  reduce using rule 12 (argumentos)


state 87

    4 subprogram: FUNCTION ID AP argumentos FP DP . tipo AC stmlist FC BLOCK_END

    NUMBER  shift, and go to state 1
    STRING  shift, and go to state 2
    BOOL    shift, and go to state 3
    MAP     shift, and go to state 4

    tipo  go to state 90


state 88

    5 subprogram: PROCEDURE ID AP argumentos FP AC . stmlist FC BLOCK_END

    WHILE   shift, and go to state 91
    IF      shift, and go to state 92
    FOR     shift, and go to state 93
    AC      shift, and go to state 94
    NUMBER  shift, and go to state 1
    STRING  shift, and go to state 2
    BOOL    shift, and go to state 3
    MAP     shift, and go to state 4

    $default  reduce using rule 27 (declaration)

    tipo          go to state 6
    tipo_inicial  go to state 7
    stmlist       go to state 95
    stm           go to state 96
    declaration   go to state 97
    while         go to state 98
    for           go to state 99
    if            go to state 100
    block         go to state 101


state 89

   15 parametros: parametros COL id .

    $default  reduce using rule 15 (parametros)


state 90

    4 subprogram: FUNCTION ID AP argumentos FP DP tipo . AC stmlist FC BLOCK_END

    AC  shift, and go to state 102


state 91

   37 while: WHILE . condition block BLOCK_ENDWHILE

    AP  shift, and go to state 103

    condition  go to state 104


state 92

   39 if: IF . condition block BLOCK_ENDIF
   40   | IF . condition block BLOCK_ENDIF elseif

    AP  shift, and go to state 103

    condition  go to state 105


state 93

   38 for: FOR . condition block BLOCK_ENDFOR

    AP  shift, and go to state 103

    condition  go to state 106


state 94

   43 block: AC . stmlist FC

    WHILE   shift, and go to state 91
    IF      shift, and go to state 92
    FOR     shift, and go to state 93
    AC      shift, and go to state 94
    NUMBER  shift, and go to state 1
    STRING  shift, and go to state 2
    BOOL    shift, and go to state 3
    MAP     shift, and go to state 4

    $default  reduce using rule 27 (declaration)

    tipo          go to state 6
    tipo_inicial  go to state 7
    stmlist       go to state 107
    stm           go to state 96
    declaration   go to state 97
    while         go to state 98
    for           go to state 99
    if            go to state 100
    block         go to state 101


state 95

    5 subprogram: PROCEDURE ID AP argumentos FP AC stmlist . FC BLOCK_END
   21 stmlist: stmlist . SEMI stm

    SEMI  shift, and go to state 108
    FC    shift, and go to state 109


state 96

   20 stmlist: stm .

    $default  reduce using rule 20 (stmlist)


state 97

   22 stm: declaration .

    $default  reduce using rule 22 (stm)


state 98

   23 stm: while .

    $default  reduce using rule 23 (stm)


state 99

   24 stm: for .

    $default  reduce using rule 24 (stm)


state 100

   25 stm: if .

    $default  reduce using rule 25 (stm)


state 101

   26 stm: block .

    $default  reduce using rule 26 (stm)


state 102

    4 subprogram: FUNCTION ID AP argumentos FP DP tipo AC . stmlist FC BLOCK_END

    WHILE   shift, and go to state 91
    IF      shift, and go to state 92
    FOR     shift, and go to state 93
    AC      shift, and go to state 94
    NUMBER  shift, and go to state 1
    STRING  shift, and go to state 2
    BOOL    shift, and go to state 3
    MAP     shift, and go to state 4

    $default  reduce using rule 27 (declaration)

    tipo          go to state 6
    tipo_inicial  go to state 7
    stmlist       go to state 110
    stm           go to state 96
    declaration   go to state 97
    while         go to state 98
    for           go to state 99
    if            go to state 100
    block         go to state 101


state 103

   44 condition: AP . bool_exp FP

    NUMBER_LITERAL  shift, and go to state 28
    FUNCTION        shift, and go to state 29
    AP              shift, and go to state 30
    TRUE            shift, and go to state 31
    FALSE           shift, and go to state 32
    NOT             shift, and go to state 33

    $default  reduce using rule 54 (bool_factor)

    bool_exp     go to state 111
    bool_term    go to state 35
    bool_factor  go to state 36
    rel_exp      go to state 37
    rel_term     go to state 38
    arth_exp     go to state 49
    arth_term    go to state 40
    arth_factor  go to state 41


state 104

   37 while: WHILE condition . block BLOCK_ENDWHILE

    AC  shift, and go to state 94

    block  go to state 112


state 105

   39 if: IF condition . block BLOCK_ENDIF
   40   | IF condition . block BLOCK_ENDIF elseif

    AC  shift, and go to state 94

    block  go to state 113


state 106

   38 for: FOR condition . block BLOCK_ENDFOR

    AC  shift, and go to state 94

    block  go to state 114


state 107

   21 stmlist: stmlist . SEMI stm
   43 block: AC stmlist . FC

    SEMI  shift, and go to state 108
    FC    shift, and go to state 115


state 108

   21 stmlist: stmlist SEMI . stm

    WHILE   shift, and go to state 91
    IF      shift, and go to state 92
    FOR     shift, and go to state 93
    AC      shift, and go to state 94
    NUMBER  shift, and go to state 1
    STRING  shift, and go to state 2
    BOOL    shift, and go to state 3
    MAP     shift, and go to state 4

    $default  reduce using rule 27 (declaration)

    tipo          go to state 6
    tipo_inicial  go to state 7
    stm           go to state 116
    declaration   go to state 97
    while         go to state 98
    for           go to state 99
    if            go to state 100
    block         go to state 101


state 109

    5 subprogram: PROCEDURE ID AP argumentos FP AC stmlist FC . BLOCK_END

    BLOCK_END  shift, and go to state 117


state 110

    4 subprogram: FUNCTION ID AP argumentos FP DP tipo AC stmlist . FC BLOCK_END
   21 stmlist: stmlist . SEMI stm

    SEMI  shift, and go to state 108
    FC    shift, and go to state 118


state 111

   44 condition: AP bool_exp . FP

    FP  shift, and go to state 119


state 112

   37 while: WHILE condition block . BLOCK_ENDWHILE

    BLOCK_ENDWHILE  shift, and go to state 120


state 113

   39 if: IF condition block . BLOCK_ENDIF
   40   | IF condition block . BLOCK_ENDIF elseif

    BLOCK_ENDIF  shift, and go to state 121


state 114

   38 for: FOR condition block . BLOCK_ENDFOR

    BLOCK_ENDFOR  shift, and go to state 122


state 115

   43 block: AC stmlist FC .

    $default  reduce using rule 43 (block)


state 116

   21 stmlist: stmlist SEMI stm .

    $default  reduce using rule 21 (stmlist)


state 117

    5 subprogram: PROCEDURE ID AP argumentos FP AC stmlist FC BLOCK_END .

    $default  reduce using rule 5 (subprogram)


state 118

    4 subprogram: FUNCTION ID AP argumentos FP DP tipo AC stmlist FC . BLOCK_END

    BLOCK_END  shift, and go to state 123


state 119

   44 condition: AP bool_exp FP .

    $default  reduce using rule 44 (condition)


state 120

   37 while: WHILE condition block BLOCK_ENDWHILE .

    $default  reduce using rule 37 (while)


state 121

   39 if: IF condition block BLOCK_ENDIF .
   40   | IF condition block BLOCK_ENDIF . elseif

    ELSE  shift, and go to state 124

    $default  reduce using rule 39 (if)

    elseif  go to state 125


state 122

   38 for: FOR condition block BLOCK_ENDFOR .

    $default  reduce using rule 38 (for)


state 123

    4 subprogram: FUNCTION ID AP argumentos FP DP tipo AC stmlist FC BLOCK_END .

    $default  reduce using rule 4 (subprogram)


state 124

   41 elseif: ELSE . IF condition block BLOCK_ENDIF elseif
   42       | ELSE . block BLOCK_ENDIF

    IF  shift, and go to state 126
    AC  shift, and go to state 94

    block  go to state 127


state 125

   40 if: IF condition block BLOCK_ENDIF elseif .

    $default  reduce using rule 40 (if)


state 126

   41 elseif: ELSE IF . condition block BLOCK_ENDIF elseif

    AP  shift, and go to state 103

    condition  go to state 128


state 127

   42 elseif: ELSE block . BLOCK_ENDIF

    BLOCK_ENDIF  shift, and go to state 129


state 128

   41 elseif: ELSE IF condition . block BLOCK_ENDIF elseif

    AC  shift, and go to state 94

    block  go to state 130


state 129

   42 elseif: ELSE block BLOCK_ENDIF .

    $default  reduce using rule 42 (elseif)


state 130

   41 elseif: ELSE IF condition block . BLOCK_ENDIF elseif

    BLOCK_ENDIF  shift, and go to state 131


state 131

   41 elseif: ELSE IF condition block BLOCK_ENDIF . elseif

    ELSE  shift, and go to state 124

    elseif  go to state 132


state 132

   41 elseif: ELSE IF condition block BLOCK_ENDIF elseif .

    $default  reduce using rule 41 (elseif)
