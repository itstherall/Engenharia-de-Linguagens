/** 
 * Defina o tipo rationalT para representar números racionais. O tipo rationalT
 * deve ser representado como um registro (ou tipo correspondente) com campos
 * inteiros numerador e denominador. Em seguida, escreva os seguintes subprogramas:
 * 
 * A) Subprograma que, dados dois parâmetros inteiros a e b, onde b != 0, retorna
 * um valor rationalT para representar a fração a/b.
 *
 * B) Subprograma que, dados dois parâmetros do tipo rationalT, retorna true
 * se eles representam o mesmo número racional ou f alse, em caso contrário.
 *
 * C) Subprogramas que retornem um valor rationalT correspondente a soma,
 * negação, subtração, multiplicação, inverso e divisão entre valores rationalT,
 * passados como parâmetros (um subprograma por operação).
 * 
 * No programa principal, invoque cada um dos subprogramas e imprima os resultados
 * produzidos, indicando numerador e denominador.
**/

/**
 * O tipo deve ser registro, ou seja, um map. Mas maps não costumam ter atributos fixos,
 * então escrevi como um struct. Algo pra alterar na escrita?
**/
container rationalT {
    number numerador;
    number denominador;
}


/**
 * Função auxiliar pra o algoritmo de soma/subtração
**/
function mdc(number n, number m): number {
    if (n%m == 0) { return n; } endif 
    else if (m%n == 0) { return m; } endif
    else if (m > n) { return mdc(n, m%n); } endif
    else { return mdc(m, n%m); } endif
} end


/**
 * Função auxiliar pra o algoritmo de soma/subtração
**/
function mmc(number a, number b): number {
    return a * (b / mdc(a, b));
} end


/**
 * Lançamento de exceção? Ou retorna um rationalT inválido, sla?
**/
function createRat(number a, number b): container rationalT {
    if (b != 0) {
        container rationalT rat = {a, b};
	return rat;
    } endif else {
        error("Divisão por zero");
    } endif 
} end


/**
 * Alguma alteração na forma de acesso aos atributos?
**/
function equalsRat(container rationalT a, container rationalT b): boolean {
    return a.numerador/a.denominador == b.numerador/b.denominador;
} end


function addRat(container rationalT a, container rationalT b): container rationalT {
    number denominador = mmc(a.denominador, b.denominador);

    container rationalT rat = {mmc/a.denominador * a.numerador + mmc/b.denominador * b.numerador, mmc}; 
    return rat;
} end


function subtractRat(container rationalT a, container rationalT b): container rationalT {
    number denominador = mmc(a.denominador, b.denominador);

    container rationalT rat = {mmc/a.denominador * a.numerador - mmc/b.denominador * b.numerador, mmc}; 
    return rat;
} end


function multiplyRat(container rationalT a, container rationalT b): container rationalT {
    container rationalT rat = {a.numerador * b.numerador, a.denominador * b.denominador};
    return rat;
} end


function divideRat(container rationalT a, container rationalT b): container rationalT {
    container rationalT rat = {a.numerador * b.denominador, a.denominador * b.numerador};
    return rat;
} end


function inverseRat(container rationalT a): container rationalT {
    container rationalT rat = {a.denominador, a.numerador};
    return rat;
} end


start () {
    number a = 5;
    number b = 9;
    container rationalT t1 = createRat(a, b);
    print("Criacao do rationalT com os numeros ", number a);
    print(" e ", number b);
    print(": ", t1.numerador);
    print("/", t1.denominador);
    print("\n");

    container rationalT t2 = createRat(b, a);
    print("Testes de igualdade:\n");
    print("Igualdade entre ", number a);
    print("/", number b);
    print(" e ", number a);
    print("/", number b);
    boolean test = equalsRat(t1, t1);
    print(": ", boolean test);
    print("\n");
    print("Igualdade entre ", number a);
    print("/", number b);
    print(" e ", number b);
    print("/", number a);
    test = equalsRat(t1, t2);
    print(": ", boolean test);
    print("\n");

    print("Testes de operações:\n");
    print("Somar ", number a);
    print("/", number b);
    print(" e ", number b);
    print("/", number a);
    container rationalT result = addRat(t1, t2);
    print(": ", number result.numerador);
    print("/", number result.denominador);
    print("\n");

    print("Subtrair ", number b);
    print("/", number a);
    print(" e ", number a);
    print("/", number b);
    result = subtractRat(t2, t1);
    print(": ", number result.numerador);
    print("/", number result.denominador);
    print("\n");

    print("Multiplicar ", number a);
    print("/", number b);
    print(" e ", number b);
    print("/", number a);
    result = multiplyRat(t1, t2);
    print(": ", number result.numerador);
    print("/", number result.denominador);
    print("\n");

    print("Dividir ", number a);
    print("/", number b);
    print(" e ", number b);
    print("/", number a);
    result = divideRat(t1, t2);
    print(": ", number result.numerador);
    print("/", number result.denominador);
    print("\n");

    print("Inverso de ", number a);
    print("/", number b);
    
    result = inverseRat(t1);
    print(": ", number result.numerador);
    print("/", number result.denominador);
    print("\n");
    
} end
